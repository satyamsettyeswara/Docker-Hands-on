Simulated HTTPS with Self-Signed SSL Certs + Docker + NGINX
✅ Objectives:
Generate a self-signed certificate

Configure NGINX to use HTTPS

Serve your Flask app securely on https://localhost:8443

🧱 Final Project Structure
vbnet
Copy
Edit
myapp/
├── app/
│   ├── app.py
│   └── requirements.txt
├── nginx/
│   ├── default.conf
│   ├── cert.pem        ← SSL cert
│   └── key.pem         ← SSL private key
├── Dockerfile
└── docker-compose.yml
🔧 Step 1: Generate a Self-Signed SSL Certificate
Run this in your nginx/ folder:

bash
Copy
Edit
openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
  -keyout key.pem -out cert.pem \
  -subj "/CN=localhost"
This creates key.pem and cert.pem in nginx/.

📝 Step 2: Update NGINX Config (nginx/default.conf)
nginx
Copy
Edit
server {
    listen 443 ssl;
    server_name localhost;

    ssl_certificate     /etc/nginx/certs/cert.pem;
    ssl_certificate_key /etc/nginx/certs/key.pem;

    location / {
        proxy_pass http://flask:5000;
    }
}
🐳 Step 3: Update docker-compose.yml
yaml
Copy
Edit
version: "3.8"
services:
  flask:
    build: .
    container_name: flask-app
  nginx:
    image: nginx
    container_name: nginx-ssl
    ports:
      - "8443:443"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/cert.pem:/etc/nginx/certs/cert.pem
      - ./nginx/key.pem:/etc/nginx/certs/key.pem
    depends_on:
      - flask
▶️ Step 4: Rebuild & Run It All
bash
Copy
Edit
docker-compose down
docker-compose up --build
Then visit:

🌐 https://localhost:8443
